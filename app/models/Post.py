from sqlalchemy import Column, Integer, String, DateTime, Boolean, Text, Float
from sqlalchemy.ext.declarative import declarative_base

Base = declarative_base()


class Post(Base):
    """
    Representa unha publicaci√≥n.
    """
    __tablename__ = 'Post'

    post_key = Column(Integer, nullable=False, primary_key=True, autoincrement=True)
    post_id = Column(String(50), nullable=False)
    name = Column(String(50), nullable=False, unique=True)
    user_key = Column(Integer, nullable=False)
    user_id = Column(String(50), nullable=False)
    subreddit_key = Column(Integer, nullable=False)
    subreddit_id = Column(String(50), nullable=False)
    parent_key = Column(Integer)
    parent_id = Column(String(50))
    link_title = Column(Text)
    body = Column(Text)
    body_html = Column(Text)
    created_utc = Column(DateTime)
    approved_at_utc = Column(DateTime)
    approved_by = Column(String(50))
    archived = Column(Boolean)
    banned_by = Column(String(50))
    banned_at_utc = Column(DateTime)
    can_gild = Column(Boolean)
    can_mod_post = Column(Boolean)
    distinguished = Column(String(50))
    downs = Column(Integer)
    edited = Column(DateTime)
    gilded = Column(Integer)
    locked = Column(Boolean)
    mod_note = Column(String(100))
    mod_reason_by = Column(String(100))
    mod_reason_title = Column(String(100))
    no_follow = Column(Boolean)
    num_reports = Column(Integer)
    permalink = Column(Text)
    removal_reason = Column(String(100))
    report_reasons = Column(String(100))
    score = Column(Integer)
    send_replies = Column(Boolean)
    stickied = Column(Boolean)
    top_awarded_type = Column(String(100))
    total_awards_received = Column(Integer)
    ups = Column(Integer)
    link_allow_live_comments = Column(Boolean)
    link_category = Column(String(100))
    link_clicked = Column(Boolean)
    link_comment_limit = Column(Integer)
    link_comment_sort = Column(String(50))
    link_contest_mode = Column(Boolean)
    link_content_categories = Column(String(100))
    link_discussion_type = Column(String(100))
    link_domain = Column(String(100))
    link_hidden = Column(Boolean)
    link_hide_score = Column(Boolean)
    link_is_crosspostable = Column(Boolean)
    link_is_meta = Column(Boolean)
    link_is_reddit_media_domain = Column(Boolean)
    link_is_robot_indexable = Column(Boolean)
    link_is_self = Column(Boolean)
    link_is_video = Column(Boolean)
    link_flair_text = Column(String(50))
    link_flair_type = Column(String(50))
    link_media_only = Column(Boolean)
    link_num_crossposts = Column(Integer)
    link_num_comments = Column(Integer)
    link_num_duplicates = Column(Integer)
    link_over_18 = Column(Boolean)
    link_parent_whitelist_status = Column(String(50))
    link_pinned = Column(Boolean)
    link_pwls = Column(Integer)
    link_quarantine = Column(Boolean)
    link_removed_by = Column(String(50))
    link_removed_by_category = Column(String(50))
    link_spoiler = Column(Boolean)
    link_suggested_sort = Column(String(50))
    link_upvote_ratio = Column(Float)
    link_url = Column(Text)
    link_view_count = Column(Integer)
    link_visited = Column(Boolean)
    link_whitelist_status = Column(String(50))
    link_wls = Column(Integer)
    comment_collapsed = Column(Boolean)
    comment_collapsed_because_crowd_control = Column(String(100))
    comment_collapsed_reason = Column(String(100))
    comment_collapsed_reason_code = Column(String(50))
    comment_type = Column(String(50))
    comment_controversiality = Column(Integer)
    comment_is_submitter = Column(Boolean)
    comment_score_hidden = Column(Boolean)
